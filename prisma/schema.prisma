// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                 String    @id @default(cuid())
  name               String
  email              String    @unique
  password           String
  isAdmin            Boolean   @default(false)
  attendanceRecords  AttendanceRecord[]
  userState          UserState?
  accounts           Account[]
  sessions           Session[]
}

model AttendanceRecord {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  date        DateTime  @default(now())
  checkIn     DateTime?
  breakStart  DateTime?
  breakEnd    DateTime?
  checkOut    DateTime?
  isAbsent    Boolean   @default(false)
  createdAt   DateTime  @default(now())
}

model UserState {
  id           String    @id @default(cuid())
  userId       String    @unique
  user         User      @relation(fields: [userId], references: [id])
  currentState String    // not_checked_in, checked_in, on_break, checked_out, absent
  lastUpdated  DateTime  @default(now())
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
